@model Monotoring.Models.DeliveryOrder
    @{ 
        int InArea = Convert.ToInt32(Session["userAreaId"]);
    }

<div>
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-title"></h4>
    </div>
    <div class="modal-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.DeliveryOrderID)

                <div class="form-group">
                        @Html.LabelFor(model => model.WorkOrdenID, "WorkOrdenID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.WorkOrdenID, new { htmlAttributes = new { @class = "form-control", @readonly="true" } })
                            @Html.ValidationMessageFor(model => model.WorkOrdenID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                @if (InArea == 2)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.date_area_One, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.date_area_One, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.date_area_One, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.date_area_One, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.date_area_One, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.date_area_One, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                @if (InArea == 3)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.date_area_Two, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.date_area_Two, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.date_area_Two, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.date_area_Two, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.date_area_Two, new { htmlAttributes = new { @class = "form-control", @readonly="true" } })
                            @Html.ValidationMessageFor(model => model.date_area_Two, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Registrar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>