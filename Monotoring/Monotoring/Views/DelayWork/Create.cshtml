@model Monotoring.Models.DelayWork

@{
    ViewBag.Title = "Nuevo retraso";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Rretraso en la orden.</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.WorkOrdenId, "WorkOrdenId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("WorkOrdenId", ViewBag.WorkOrden as SelectList, htmlAttributes: new { @class = "form-control disable" })
                @*@Html.EditorFor(model => model.WorkOrden.BatchOrden,new { htmlAttributes = new { @class = "form-control",@value= "@(ViewBag.WorkOrden)" } })*@
                @Html.ValidationMessageFor(model => model.WorkOrdenId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DelayCodeId, "DelayCodeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DelayCodeId", ViewBag.DelayCode as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DelayCodeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripDelay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 ">
                @Html.TextAreaFor(model => model.descripDelay, new { htmlAttributes = new { @class = "form-control", @rows="3" } })
                @Html.ValidationMessageFor(model => model.descripDelay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateDelay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateDelay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateDelay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateFinish, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateFinish, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dateFinish, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UsersId, "UsersId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UsersId", ViewBag.Users as SelectList, htmlAttributes: new { @class = "form-control disable" })
                @Html.ValidationMessageFor(model => model.UsersId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
