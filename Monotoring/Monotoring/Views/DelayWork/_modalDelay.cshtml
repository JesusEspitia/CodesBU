@model Monotoring.Models.DelayWork


<div>
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
            <span aria-hidden="true">&times;</span>
        </button>
        <h4 class="modal-header">Nuevo Retraso.</h4>
    </div>
    <div class="modal-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Orden", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("WorkOrdenId", ViewBag.WorkOrden as SelectList, htmlAttributes: new { @class = "form-control ", @readonly = "true" })
                        @*@Html.EditorFor(model => model.WorkOrden.BatchOrden,new { htmlAttributes = new { @class = "form-control",@value= Model.WorkOrdenId } })*@
                        @Html.ValidationMessageFor(model => model.WorkOrdenId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Tipo de retraso", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("DelayCodeId", ViewBag.DelayCode as SelectList, "Seleccione uno", htmlAttributes: new { @class = "form-control", @id = "DelayCode", @onchange = "FillDescp()" })
                        @Html.ValidationMessageFor(model => model.DelayCodeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.SubCodesId, new SelectList(Enumerable.Empty<SelectListItem>(), "SubCodesId", "DescripCode"), "Descripción", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SubCodesId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Responsable, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" id="">
                        @Html.EditorFor(model => model.Responsable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Responsable, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReportNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" id="">
                        @Html.EditorFor(model => model.ReportNo, new { htmlAttributes = new { @class = "form-control", @data_toggle = "tooltip", @data_placement = "rigth", @title = "Escriba, solo si aplica, el número de reporte generado. Si no aplica déje el espacio en blanco." } })
                        @Html.ValidationMessageFor(model => model.ReportNo, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dateDelay, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" id="">
                        @Html.EditorFor(model => model.dateDelay, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.dateDelay, "", new { @class = "text-danger" })
                    </div>

                </div>



                <div class="form-group">
                    @Html.Label("Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("UsersId", ViewBag.Users as SelectList, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                        @Html.ValidationMessageFor(model => model.UsersId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<script>
    function FillDescp() {
        var codeId = document.getElementById("DelayCode");
        var e = codeId.options[codeId.selectedIndex].value;
        //alert(e);
        $.ajax({
            url: '/DelayWork/FillDescp',
            type: "GET",
            dataType: "JSON",
            data: { 'code': e },
            success: function (codes) {
                $("#SubCodesId").html("");
                $.each(codes, function (i, code) {
                    $("#SubCodesId").append(
                        $('<option></option>').val(code.SubCodesId).html(code.DescripCode));
                });
            }
        });
    }

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
</script>