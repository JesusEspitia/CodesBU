@using Monotoring.Models;
@model dynamic
    
@{
    ViewBag.Title = "Home Page";
    //List<Monotoring.Models.WorkOrden> lstOrden =  Model[0]() as List<Monotoring.Models.WorkOrden>;
}

<br />
<br />
<br />
<br />
@*<dvi class="container-fluid">*@
    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <thead >
                <tr>
                    <th class="text-center">
                        Producto
                    </th>
                    <th class="text-center">
                        Orden
                    </th>
                    <th class="text-center">
                        Ensamble Final
                    </th>
                    <th class="text-center">
                        Calidad
                    </th>
                    <th class="text-center">
                        Lógistica
                    </th>
                    <th class="text-center">
                        Esterilización
                    </th>
                    <th class="text-center">
                        Liberación QA Final
                    </th>
                    <th class="text-center">
                        Envió P/L
                    </th>
                    <th class="text-center">
                        Días transcurridos
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (WorkCatalog w in Model.WorkOrden)
                {
                    var temp = 0;
                    int dayscount = 0;
                    
                    <tr>
                        <td class="text-center">@w.Catalog.CatalogDescrip</td>
                        <td class="text-center">
                            @Html.ActionLink(w.WorkOrden.BatchOrden, "Index", "OrdenDetail", new { id = w.WorkOrden.WorkOrdenId },null)                           
                        </td>
                        @foreach (AreaViewModel a in Model.Area_Orden)
                        {
                            var classcolor = "";
                            var icon = "";
                            if (w.WorkOrden.WorkOrdenId == a.Area_Orden.WorkOrdenId)
                            {
                                DateTime lastDate;
                                if (a.Area_Orden.dateFinish != null)
                                {
                                    lastDate = (DateTime)a.Area_Orden.dateFinish;
                                }
                                else
                                {
                                    lastDate = DateTime.Now;
                                }

                                if (Math.Round((lastDate - (DateTime)a.Area_Orden.dateStart).TotalDays, 0) < a.Area.daysMax)
                                {
                                    classcolor = "success";
                                    dayscount = (int)Math.Round((lastDate - (DateTime)a.Area_Orden.dateStart).TotalDays, 0);
                                    icon = "glyphicon glyphicon-ok";
                                }
                                else
                                {
                                    if (Math.Round((lastDate - (DateTime)a.Area_Orden.dateStart).TotalDays, 0) == a.Area.daysMax)
                                    {
                                        classcolor = "warning";
                                        dayscount = (int)Math.Round((lastDate - (DateTime)a.Area_Orden.dateStart).TotalDays, 0);
                                        icon = "glyphicon glyphicon-exclamation-sign";
                                    }
                                    else
                                    {
                                        if (Math.Round((lastDate - (DateTime)a.Area_Orden.dateStart).TotalDays, 0) >= a.Area.daysMax)
                                        {
                                            classcolor = "danger";
                                            dayscount = (int)Math.Round((lastDate - (DateTime)a.Area_Orden.dateStart).TotalDays, 0);
                                            icon = "glyphicon glyphicon-remove";
                                        }
                                    }
                                }


                                switch ((int)a.Area_Orden.AreaId)
                                {
                                    case 1:
                                        <td class="@classcolor text-center">@dayscount<span class="@icon" aria-hidden="true"></span></td>
                                        temp += 1;
                                        break;
                                    case 2:
                                        <td class="@classcolor text-center">@dayscount<span class="@icon" aria-hidden="true"></span></td>
                                        temp += 1;
                                        break;
                                    case 3:
                                        <td class="@classcolor text-center">@dayscount<span class="@icon" aria-hidden="true"></span></td>
                                        temp += 1;
                                        break;
                                    case 4:
                                        <td class="@classcolor text-center">@dayscount<span class="@icon" aria-hidden="true"></span></td>
                                        temp += 1;
                                        break;
                                    case 5:
                                        <td class="@classcolor text-center">@dayscount<span class="@icon" aria-hidden="true"></span></td>
                                        temp += 1;
                                        break;
                                    case 6:
                                        <td class="@classcolor text-center">@dayscount<span class="@icon" aria-hidden="true"></span></td>
                                        temp += 1;
                                        break;
                                }

                            }
                        }
                        @for(int i = 0; i < 6 - temp; i++)
                        {
                            <td class="active text-center">Sin Iniciar</td>
                        }
                        @if (w.WorkOrden.dateStart != null)
                        {
                            if ((Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0)) < 10)
                            {
                                <td class="success">@(Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0))</td>
                            }
                            else
                            {
                                if ((Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0)) >= 10 && (Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0)) <= 12)
                                {
                                    <td class="warning">@(Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0))</td>
                                }
                                else
                                {
                                    if ((Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0)) > 12)
                                    {
                                        <td class="danger">@(Math.Round((DateTime.Now - (DateTime)w.WorkOrden.dateStart).TotalDays, 0))</td>
                                    }
                                }
                            }

                        }
                        else
                        {
                            <td>Sin iniciar</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
@*</dvi>*@









@*<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>*@
@*<div class="container">
    <div class="card card-container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @using (Html.BeginForm("Login", "Users", FormMethod.Post, new { @class = "form-singin" }))
        {
            <div>
                @Html.TextBoxFor(dl => dl.userEmail, new { @class = "form-control", @placeholder = "Correo electronico" })
                @Html.ValidationMessageFor(dl => dl.userEmail, "", new { @clas = "txt-danger" })
            </div>
            <div>
                @Html.PasswordFor(dl => dl.userPass, new { @class = "from-control", @placeholder = "Contraseña" })
                @Html.ValidationMessageFor(dl => dl.userPass, "", new { @class = "txt-danger" })
            </div>
            <input type="submit" value="Iniciar" class="btn btn-primary" />
        }
    </div>
</div>*@